" ~/.vimrc
" My Vim Configuration File
" Author: Indrajit Ghosh
" Created On: Dec 17, 2024
"
" This file contains personal configurations for Vim to enhance the editing experience,
" including basic settings, plugin management, key mappings, and environment setup.

" ----------------------------------------------------------------------------
" Auto-Download Vim-Plug (plugin manager)
" ----------------------------------------------------------------------------
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" ----------------------------------------------------------------------------
" Basic Vim Configuration
" ----------------------------------------------------------------------------
set nocompatible        " Use Vim and not vi (legacy compatibility mode)
filetype plugin on      " Enable file-specific plugins
filetype indent on      " Enable file-specific indentation
filetype on             " Enable file type detection
set encoding=utf-8      " Set file encoding to UTF-8
set wrap linebreak      " Wrap long lines and break lines at words
set tabstop=4           " Display existing tabs as 4 spaces wide
set shiftwidth=4        " Use 4 spaces for indentation with '>'
set expandtab           " Use spaces instead of tab characters when pressing Tab
set number              " Display absolute line numbers
set cursorline          " Highlight the current line
set relativenumber      " Display relative line numbers
set ruler               " Show current line and column number in the status line
set showcmd             " Show partially typed commands
set nohlsearch          " Don't highlight search results
set noincsearch         " Don't jump to search results as search string is typed
set nofoldenable        " Don't fold text by default when opening files
set autowriteall        " Automatically write current buffer when switching buffers
syntax enable           " Enable syntax highlighting

" Fix for bug related to '[4em]' char at the beginning of Vim
set keyprotocol=
let &term=&term

" Leader key configuration (used for custom mappings)
let mapleader = " "

" ----------------------------------------------------------------------------
" OS Detection and Configuration
" ----------------------------------------------------------------------------
if !exists("g:os_current")
  if system('uname -s') == "Linux\n"
    let g:os_current = "Linux"
  elseif system('uname -s') == "Darwin\n"
    let g:os_current = "Darwin"
  else
    echom "Error: the current operating system won't support all of my Vim configurations."
    let g:os_current = "Other"
  endif
endif

" ----------------------------------------------------------------------------
" Python Provider Setup
" ----------------------------------------------------------------------------
if g:os_current == "Linux"
  let g:python3_host_prog = '/usr/bin/python3'
elseif g:os_current == "Darwin"
  let g:python3_host_prog = '/usr/local/bin/python3'
endif

" ----------------------------------------------------------------------------
" Plugin Management with vim-plug
" ----------------------------------------------------------------------------
call plug#begin('~/.vim/plugged')

" Plugin declarations
Plug 'junegunn/vim-plug'          " vim-plug plugin manager
Plug 'SirVer/ultisnips'           " Snippet engine for Vim
Plug 'arzg/vim-colors-xcode'      " Xcode-inspired color scheme
Plug 'morhetz/gruvbox'            " Gruvbox color scheme
Plug 'lervag/vimtex'              " LaTeX support for Vim

call plug#end()

" ----------------------------------------------------------------------------
" Insert Mode Mappings
" ----------------------------------------------------------------------------
 " Use <leader>b to move to the next buffer
noremap <leader>b :bnext<CR>     
" ----------------------------------------------------------------------------
" UltiSnips Plugin Configuration
" ----------------------------------------------------------------------------
let g:UltiSnipsExpandTrigger       = '<Tab>'    " Use Tab to expand snippets
let g:UltiSnipsJumpForwardTrigger  = '<Tab>'    " Use Tab to move forward through tabstops
let g:UltiSnipsJumpBackwardTrigger = '<S-Tab>'  " Use Shift-Tab to move backward through tabstops
let g:UltiSnipsSnippetDirectories  = [$HOME.'/.vim/UltiSnips']  " Set UltiSnips directories

" ----------------------------------------------------------------------------
" Colorscheme Configuration
" ----------------------------------------------------------------------------
colorscheme gruvbox " Set the default color scheme to 'gruvbox'
set background=dark  " Set the background to dark mode

" ----------------------------------------------------------------------------
" Miscellaneous Key Mappings
" ----------------------------------------------------------------------------
" Use <leader>s to source the .vimrc
noremap <leader>s :source ~/.vimrc<CR>

" Use <leader>w to save the current file
nnoremap <leader>w :w<CR>

" Copy the selected text to the system clipboard using <leader>y
noremap <leader>y "+y

" Yank the entire file to the system clipboard using <leader>Y
noremap <leader>Y ggVG"+y

" Paste the contents of the system clipboard at the cursor position
noremap <leader>p "+p

" Paste the contents of the system clipboard before the cursor position
noremap <leader>P "+P

" ----------------------------------------------------------------------------
" LaTeX Key Mappings (using vimtex)
" ----------------------------------------------------------------------------

" Use <leader>c to save and compile the current LaTeX document
noremap <leader>c :write<CR>:VimtexCompile<CR>

" End of Vim Configuration
" ----------------------------------------------------------------------------

